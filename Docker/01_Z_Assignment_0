2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
    docker pull nginx
 
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
    docker images
 
4. Find out the "Full" ImageId of the image that you pulled and write it below.
    docker inspect --format='{{.ID}}'f35646e83998
 
5. Create a container of your image 
    docker run --name nginx -d -p 80:80 nginx
 
6. List all the running containers
    docker ps
 
7. List all the running and stopped containers
    docker ps -a
 
8. Find out the "Full" containerId of the container and write it below.
    docker inspect --format='{{.ID}}' f90c2b41f00a
 
9. Find out how many image layers are used to build this image.
    docker history nginx
 
10. Get the Apache Tomcat 7 server image from the docker hub.
    docker pull tomcat:7
 
11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
    docker run --name tomcat7 -d -p 8080:8080 tomcat:7
 
12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
    docker inspect tomcat7 | grep "IPAddress"
 
13. Which Port it is using?
    172.17.0.3
    
14. Try to access the Tomcat's home page from your machine/vm.
	  https:<ip address>:8080
    curl '0.0.0.0:8080'
    
15. What is the disk size of Apache Tomcat image?
    docker image inspect --format='{{.Size}}' tomcat:7
 
16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
	  docker exec -it 791c8dbfdb5e /bin/bash
	  env
 
17. Find out which port is exposed for tomcat?
    docker inspect --format='{{.Config.ExposedPorts}}' 791c8dbfdb5e
 
18. Run multiple conntainers of tomcat on different port and access it's home page.
    docker run -d -p 8181:8080 tomcat
 
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
    docker pull ubuntu:18.04
 
20. Run the container of ubuntu in attached mode.
    docker run -it --name ubuntu18 ubuntu:18.04
 
21. Run the container of another ubuntu in detached mode.
	docker run -d --name ubuntu1604 ubuntu:16.04
 
22. Check how many ubuntu containers are running and stopped
	docker ps -a | grep ubuntu
 
23. Is the tomcat container running? If no, start one.
	docker start <ID>
 
24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
	docker logs -f 791c8dbfdb5e
 
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
	docker start <ID>
 
26. Login as root user in ubuntu container
	docker exec --user root -it <ID> /bin/bash
 
27. Create a file with any name in root directory
	touch demo.txt
 
28. Install software of your choice in ubuntu container using "apt-get install"
	apt-get update
	apt-get install vim
	
29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
	exit
 
30. Check if the ubuntu container is running.
	docker ps | grep ubuntu
 
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
	docker run -it --name ubuntu1804 -p 8081:8080 ubuntu:18.04
 
32. Login as a root user
	docker exec --user root -it ubuntu18 /bin/bash
 
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
	docker rm <container ID>
 
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.


35. Create an Image out of the existing container.
	docker commit <container ID> ubuntuimage
 
36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
	docker run -it --name newubuntu ubuntuimage
 
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
 	docker stop <ID>
	docker kill <ID>
 
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
	docker run -d -p 8080:8080 -v /root/index.html:/usr/local/tomcat/webapps/ROOT/index.jsp --name tomcat tomcat:latest
 
39. type below command:-
	docker images â€“help
 
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q

write atleast 1 command using each option above and prove their concepts as described in the --help.
 
	docker images -a	:Show all images
	docker images -f	:Filter output based on conditions provided
	docker images -q	:Only show numeric IDs

40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
2. -f
3. -q
4. -n
5. -l
6. -s
 
	docker ps -a	:Show all containers
	docker ps -f	:Filter output based on conditions provided
	docker ps -n	:Show n last created containers
	docker ps -l	:Show the latest created container
	docker ps -q	:Only display numeric IDs
	docker ps -s	:Display total file sizes
 
 
 

